const MONGOOSE = require("mongoose");
const SCHEMA = MONGOOSE.Schema;

const VEHICLE_CATEGORY = SCHEMA({
    category_name: {type: String, required: true, unique: true},
    category_no: {type: Number, default: 0},
    sub_category: [
        {
            sub_category_name: {type: String, required: true, unique: true},
            sub_category_no: {type: Number, default: 0},
            category_tag: {type: String},
            upper_bid_limit: {type: Number, default: 0},
            lower_bid_limit: {type: Number, default: 0},
            trip_send_drivers_count: {type: Number, default: 4},
            higher_bid_tripC_chance_count: {type: Number, default: 3},
            sub_category_skipping_count: {type: Number, default: 1},
            passenger_count: {type: Number, default: 3},
            driver_trip_timer_seconds: {type: Number, default: 45},
            vehicles: [
                {
                    vehicle_brand: {type: String},
                    vehicle_name: {type: String},
                    vehicle_class: {type: String},
                    model_capacity: {type: Number},
                    model_type: {type: String},
                    vehicle_passenger_count: {type: Number},
                    vehicle_capacity_weight_limit: {type: Number},
                    admin_commission: {type: Number},
                    company_commission: {type: Number},
                },
            ],
            price_selection: [
                {
                    district_name: {type: String},
                    time_base: [
                        {
                            time_slot_name: {type: String, required: true},
                            starting_time: {type: String},
                            ending_time: {type: String},
                            district_price: {type: Number, default: 0},
                            upper_bid_limit: {type: Number, default: 0},
                            lower_bid_limit: {type: Number, default: 0},
                            base_fare: {type: Number},
                            minimum_fare: {type: Number},
                            minimum_km: {type: Number},
                            below_above_km_range: {type: Number},
                            above_km_fare: {type: Number, default: 0},
                            below_km_fare: {type: Number, default: 0},
                            traffic_waiting_charge_per_minute: {type: Number},
                            normal_waiting_charge_per_minute: {type: Number},
                            radius: {type: Number},
                            package_delivery_km_per_hour: {type: Number},
                            package_delivery_km_per_day: {type: Number},
                            trip_cancellation_fee: {type: Number, default: 0},
                            max_waiting_time_without_charge: {type: Number, default: 0},
                        },
                    ],
                },
            ],
            road_pickup_price_selection: [
                {
                    district_name: {type: String},
                    time_base: [
                        {
                            time_slot_name: {type: String, required: true},
                            starting_time: {type: String},
                            ending_time: {type: String},
                            district_price: {type: Number},
                            base_fare: {type: Number},
                            minimum_fare: {type: Number},
                            minimum_km: {type: Number},
                            below_above_km_range: {type: Number},
                            above_km_fare: {type: Number},
                            below_km_fare: {type: Number},
                            traffic_waiting_charge_per_minute: {type: Number},
                            normal_waiting_charge_per_minute: {type: Number},
                            radius: {type: Number},
                            package_delivery_km_per_hour: {type: Number},
                            package_delivery_km_per_day: {type: Number},
                        },
                    ],
                },
            ],
            sub_description: {type: String, required: true},
            is_enable: {type: Boolean, default: true},
            package_delivery: {type: Boolean},
            sub_category_icon: {type: String},
            sub_category_icon_selected: {type: String},
            map_icon: {type: String},
            map_icon_offline: {type: String},
            map_icon_on_trip: {type: String},
            sub_category_icon_svg: {type: String},
            sub_category_icon_selected_svg: {type: String},
            map_icon_svg: {type: String},
            map_icon_offline_svg: {type: String},
            map_icon_on_trip_svg: {type: String},
        },
    ],
    description: {type: String},
    is_enable: {type: Boolean, default: true},
    recorded_time: {type: Date, default: Date.now},
});

module.exports = MONGOOSE.model("vehicle_categories", VEHICLE_CATEGORY);
